{"version":3,"sources":["apis/jsonPlaceholder.js","actions/index.js","components/UserHeader.js","components/PostList.js","components/App.js","reducers/index.js","reducers/postReducer.js","reducers/usersReducer.js","index.js"],"names":["axios","create","baseURL","fetchPosts","dispatch","a","async","jsonPlaceholder","get","response","type","payload","data","fetchUser","id","UserHeader","user","this","props","className","name","React","Component","connect","state","ownProps","users","find","userId","PostList","fetchPostsAndUsers","posts","map","post","key","title","body","renderList","getState","_","uniq","forEach","App","combineReducers","action","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"iRAEeA,E,OAAAA,EAAMC,OAAQ,CACzBC,QAAS,yCCcAC,EAAa,kBAAM,SAAMC,GAAN,eAAAC,EAAAC,OAAA,kEAAAD,EAAA,MACLE,EAAgBC,IAAI,WADf,OACtBC,EADsB,OAE5BL,EAAU,CACNM,KAAM,cACNC,QAASF,EAASG,OAJM,uCAQnBC,EAAY,SAAAC,GAAE,OAAI,SAAMV,GAAN,eAAAC,EAAAC,OAAA,kEAAAD,EAAA,MACJE,EAAgBC,IAAhB,iBAA8BM,KAD1B,OACrBL,EADqB,OAG3BL,EAAU,CACNM,KAAM,aACNC,QAASF,EAASG,OALK,uCCrBzBG,E,iLAEO,IAEGC,EAASC,KAAKC,MAAdF,KACR,OAAKA,EAGE,yBAAKG,UAAU,UAAUH,EAAKI,MAF1B,S,GANMC,IAAMC,WAmBhBC,eAPS,SAACC,EAAOC,GAE5B,MAAO,CACHT,KAAMQ,EAAME,MAAMC,MAAK,SAACX,GAAD,OAAUA,EAAKF,KAAOW,EAASG,aAI/CL,CAAyBR,GClBlCc,E,4LAEEZ,KAAKC,MAAMY,uB,mCAGX,OAAOb,KAAKC,MAAMa,MAAMC,KAAI,SAAAC,GACxB,OACI,yBAAKd,UAAU,OAAOe,IAAKD,EAAKnB,IAC5B,uBAAGK,UAAU,mCACb,yBAAKA,UAAU,WACX,yBAAKA,UAAU,eACX,4BAAKc,EAAKE,OACV,2BAAIF,EAAKG,OAEb,kBAAC,EAAD,CAAYR,OAAQK,EAAKL,gB,+BAQzC,OACI,yBAAKT,UAAU,2BACVF,KAAKoB,kB,GAxBChB,IAAMC,WAkCdC,eAJS,SAACC,GACrB,MAAO,CAAEO,MAAOP,EAAMO,SAKtB,CAAED,mBFtC4B,kBAAM,SAAO1B,EAAUkC,GAAjB,SAAAjC,EAAAC,OAAA,kEAAAD,EAAA,MAI9BD,EAASD,MAJqB,OAUpBoC,IAAEC,KAAKD,IAAEP,IAAIM,IAAWP,MAAO,WACvCU,SAAQ,SAAA3B,GAAE,OAAIV,EAASS,EAAUC,OAXL,wCEoCzBS,CAGbM,GC/Baa,EARH,WACR,OACI,yBAAKvB,UAAU,gBACX,kBAAC,EAAD,Q,QCFGwB,cAAgB,CAC3BZ,MCLW,WAAyB,IAAxBP,EAAuB,uDAAf,GAAIoB,EAAW,uCACnC,OAAQA,EAAOlC,MACX,IAAK,cACD,OAAOkC,EAAOjC,QAClB,QACI,OAAOa,IDCfE,MENW,WAAyB,IAAxBF,EAAuB,uDAAf,GAAIoB,EAAW,uCACnC,OAAQA,EAAOlC,MACX,IAAK,aACD,MAAM,GAAN,mBAAWc,GAAX,CAAkBoB,EAAOjC,UAC7B,QACI,OAAOa,MCIbqB,EAAQC,YAAYC,EAAUC,YAAgBC,MAEpDC,IAASC,OACL,kBAAC,IAAD,CAAUN,MAAOA,GACb,kBAAC,EAAD,OAEJO,SAASC,eAAe,W","file":"static/js/main.7cd74ff8.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport default axios.create ({\r\n    baseURL: 'https://jsonplaceholder.typicode.com',\r\n});","import _ from 'lodash';\r\nimport jsonPlaceholder from '../apis/jsonPlaceholder';\r\n\r\nexport const fetchPostsAndUsers = () => async (dispatch, getState) => {\r\n    // var startTime = new Date();\r\n    // console.log('Function called.');\r\n\r\n    await dispatch(fetchPosts());\r\n    \r\n    // var endTime = new Date();\r\n    // var timeDiff = endTime - startTime;\r\n    // console.log('Returned after: ' + timeDiff + ' ms.');\r\n\r\n    const userIds = _.uniq(_.map(getState().posts, 'userId'));\r\n    userIds.forEach(id => dispatch(fetchUser(id)));\r\n}\r\n\r\nexport const fetchPosts = () => async dispatch => {\r\n    const response = await jsonPlaceholder.get('/posts');\r\n    dispatch ({\r\n        type: 'FETCH_POSTS',\r\n        payload: response.data\r\n    });\r\n};\r\n\r\nexport const fetchUser = id => async dispatch => {\r\n    const response = await jsonPlaceholder.get(`/users/${id}`);\r\n    // console.log(response.data.name);\r\n    dispatch ({\r\n        type: 'FETCH_USER',\r\n        payload: response.data\r\n    });\r\n};\r\n\r\n// export const fetchUser = id => dispatch => {\r\n//     _fetchUser(id, dispatch);\r\n// };\r\n\r\n// const _fetchUser = _.memoize(async (id, dispatch) => {\r\n//     const response = await jsonPlaceholder.get(`/users/${id}`);\r\n//     console.log(response.data.name);\r\n//     dispatch ({\r\n//         type: 'FETCH_USER',\r\n//         payload: response.data\r\n//     });\r\n// });\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nclass UserHeader extends React.Component {\r\n    \r\n    render() {\r\n        // console.log('rendered');\r\n        const { user } = this.props;\r\n        if (!user) {\r\n            return null;\r\n        }\r\n        return <div className='header'>{user.name}</div>;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    // console.log('mapping');\r\n    return {\r\n        user: state.users.find((user) => user.id === ownProps.userId)\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(UserHeader);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchPostsAndUsers } from '../actions';\r\nimport UserHeader from './UserHeader';\r\n\r\nclass PostList extends React.Component {\r\n    componentDidMount() {\r\n        this.props.fetchPostsAndUsers();\r\n    }\r\n    renderList() {\r\n        return this.props.posts.map(post => {\r\n            return (\r\n                <div className='item' key={post.id}>\r\n                    <i className='large middle aligned icon user'/>\r\n                    <div className='content'>\r\n                        <div className='description'>\r\n                            <h2>{post.title}</h2>\r\n                            <p>{post.body}</p>\r\n                        </div>\r\n                        <UserHeader userId={post.userId}/>\r\n                    </div>\r\n                </div>\r\n            );\r\n        });\r\n    }\r\n    render() {\r\n        // console.log(this.props.posts);\r\n        return (\r\n            <div className='ui relaxed divided list'>\r\n                {this.renderList()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { posts: state.posts };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { fetchPostsAndUsers }\r\n)(PostList);\r\n","import React from 'react';\r\nimport PostList from './PostList';\r\n\r\nconst App = () => {\r\n    return (\r\n        <div className='ui container'>\r\n            <PostList />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","import { combineReducers } from 'redux';\r\nimport postReducer from './postReducer';\r\nimport usersReducer from './usersReducer';\r\n\r\nexport default combineReducers({\r\n    posts: postReducer,\r\n    users: usersReducer\r\n});","export default (state = [], action) => {\r\n    switch (action.type) {\r\n        case 'FETCH_POSTS':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n};","export default (state = [], action) => {\r\n    switch (action.type) {\r\n        case 'FETCH_USER':\r\n            return [...state, action.payload];\r\n        default:\r\n            return state;\r\n    }\r\n};","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport App from './components/App';\r\nimport reducers from './reducers';\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunk));\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}